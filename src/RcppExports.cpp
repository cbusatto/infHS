// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// infHS_FB
Rcpp::List infHS_FB(const int& B, const int& bn, const Eigen::VectorXd& y, const Eigen::MatrixXd& X, const Rcpp::List Z_list, const int& M, const Eigen::VectorXd& hyp_sigma, const Eigen::VectorXd& a_k, const Eigen::VectorXd& b_k, const double& s0, const int& ping);
RcppExport SEXP _infHS_infHS_FB(SEXP BSEXP, SEXP bnSEXP, SEXP ySEXP, SEXP XSEXP, SEXP Z_listSEXP, SEXP MSEXP, SEXP hyp_sigmaSEXP, SEXP a_kSEXP, SEXP b_kSEXP, SEXP s0SEXP, SEXP pingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int& >::type B(BSEXP);
    Rcpp::traits::input_parameter< const int& >::type bn(bnSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List >::type Z_list(Z_listSEXP);
    Rcpp::traits::input_parameter< const int& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type hyp_sigma(hyp_sigmaSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type a_k(a_kSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type b_k(b_kSEXP);
    Rcpp::traits::input_parameter< const double& >::type s0(s0SEXP);
    Rcpp::traits::input_parameter< const int& >::type ping(pingSEXP);
    rcpp_result_gen = Rcpp::wrap(infHS_FB(B, bn, y, X, Z_list, M, hyp_sigma, a_k, b_k, s0, ping));
    return rcpp_result_gen;
END_RCPP
}
// infHS_VB
Rcpp::List infHS_VB(const Eigen::VectorXd& y, const Eigen::MatrixXd& X, const Rcpp::List Z_list, const int& M, const Eigen::VectorXd& hyp_sigma, const Eigen::VectorXd& a_k, const Eigen::VectorXd& b_k, const double& s0, const int& bmax, const double& eps, const int& ping);
RcppExport SEXP _infHS_infHS_VB(SEXP ySEXP, SEXP XSEXP, SEXP Z_listSEXP, SEXP MSEXP, SEXP hyp_sigmaSEXP, SEXP a_kSEXP, SEXP b_kSEXP, SEXP s0SEXP, SEXP bmaxSEXP, SEXP epsSEXP, SEXP pingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List >::type Z_list(Z_listSEXP);
    Rcpp::traits::input_parameter< const int& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type hyp_sigma(hyp_sigmaSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type a_k(a_kSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type b_k(b_kSEXP);
    Rcpp::traits::input_parameter< const double& >::type s0(s0SEXP);
    Rcpp::traits::input_parameter< const int& >::type bmax(bmaxSEXP);
    Rcpp::traits::input_parameter< const double& >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const int& >::type ping(pingSEXP);
    rcpp_result_gen = Rcpp::wrap(infHS_VB(y, X, Z_list, M, hyp_sigma, a_k, b_k, s0, bmax, eps, ping));
    return rcpp_result_gen;
END_RCPP
}
// infHS_VB_probit
Rcpp::List infHS_VB_probit(const Eigen::VectorXd& y, const Eigen::MatrixXd& X, const Rcpp::List Z_list, const int& M, const Eigen::VectorXd& a_k, const Eigen::VectorXd& b_k, const double& s0, const int& bmax, const double& eps, const int& ping);
RcppExport SEXP _infHS_infHS_VB_probit(SEXP ySEXP, SEXP XSEXP, SEXP Z_listSEXP, SEXP MSEXP, SEXP a_kSEXP, SEXP b_kSEXP, SEXP s0SEXP, SEXP bmaxSEXP, SEXP epsSEXP, SEXP pingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List >::type Z_list(Z_listSEXP);
    Rcpp::traits::input_parameter< const int& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type a_k(a_kSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type b_k(b_kSEXP);
    Rcpp::traits::input_parameter< const double& >::type s0(s0SEXP);
    Rcpp::traits::input_parameter< const int& >::type bmax(bmaxSEXP);
    Rcpp::traits::input_parameter< const double& >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const int& >::type ping(pingSEXP);
    rcpp_result_gen = Rcpp::wrap(infHS_VB_probit(y, X, Z_list, M, a_k, b_k, s0, bmax, eps, ping));
    return rcpp_result_gen;
END_RCPP
}
// rg3p
double rg3p(const double& a, const double& b, const int& c);
RcppExport SEXP _infHS_rg3p(SEXP aSEXP, SEXP bSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double& >::type b(bSEXP);
    Rcpp::traits::input_parameter< const int& >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(rg3p(a, b, c));
    return rcpp_result_gen;
END_RCPP
}
// solve_quartic
double solve_quartic(const Eigen::VectorXd& coefficients);
RcppExport SEXP _infHS_solve_quartic(SEXP coefficientsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type coefficients(coefficientsSEXP);
    rcpp_result_gen = Rcpp::wrap(solve_quartic(coefficients));
    return rcpp_result_gen;
END_RCPP
}
// solve_quartic2
double solve_quartic2(const double& a1, const double& a2, const double& a3);
RcppExport SEXP _infHS_solve_quartic2(SEXP a1SEXP, SEXP a2SEXP, SEXP a3SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type a1(a1SEXP);
    Rcpp::traits::input_parameter< const double& >::type a2(a2SEXP);
    Rcpp::traits::input_parameter< const double& >::type a3(a3SEXP);
    rcpp_result_gen = Rcpp::wrap(solve_quartic2(a1, a2, a3));
    return rcpp_result_gen;
END_RCPP
}
// rmvnorm_b
Eigen::VectorXd rmvnorm_b(const Eigen::MatrixXd& X, const Eigen::VectorXd& y, const Eigen::VectorXd& d, const double& sigma2);
RcppExport SEXP _infHS_rmvnorm_b(SEXP XSEXP, SEXP ySEXP, SEXP dSEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type d(dSEXP);
    Rcpp::traits::input_parameter< const double& >::type sigma2(sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(rmvnorm_b(X, y, d, sigma2));
    return rcpp_result_gen;
END_RCPP
}
// rlambda
double rlambda(const double& d, const double& a, const double& b);
RcppExport SEXP _infHS_rlambda(SEXP dSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type d(dSEXP);
    Rcpp::traits::input_parameter< const double& >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double& >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(rlambda(d, a, b));
    return rcpp_result_gen;
END_RCPP
}
// log_kf
double log_kf(const double& d, const double& a, const double& b);
RcppExport SEXP _infHS_log_kf(SEXP dSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type d(dSEXP);
    Rcpp::traits::input_parameter< const double& >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double& >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(log_kf(d, a, b));
    return rcpp_result_gen;
END_RCPP
}
// m_e1
double m_e1(const double& d, const double& a, const double& b, const double& lkf);
RcppExport SEXP _infHS_m_e1(SEXP dSEXP, SEXP aSEXP, SEXP bSEXP, SEXP lkfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type d(dSEXP);
    Rcpp::traits::input_parameter< const double& >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double& >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double& >::type lkf(lkfSEXP);
    rcpp_result_gen = Rcpp::wrap(m_e1(d, a, b, lkf));
    return rcpp_result_gen;
END_RCPP
}
// m_e2
double m_e2(const double& d, const double& a, const double& b, const double& lkf);
RcppExport SEXP _infHS_m_e2(SEXP dSEXP, SEXP aSEXP, SEXP bSEXP, SEXP lkfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type d(dSEXP);
    Rcpp::traits::input_parameter< const double& >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double& >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double& >::type lkf(lkfSEXP);
    rcpp_result_gen = Rcpp::wrap(m_e2(d, a, b, lkf));
    return rcpp_result_gen;
END_RCPP
}
// m_e3
double m_e3(const double& d, const double& a, const double& b, const double& lkf);
RcppExport SEXP _infHS_m_e3(SEXP dSEXP, SEXP aSEXP, SEXP bSEXP, SEXP lkfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type d(dSEXP);
    Rcpp::traits::input_parameter< const double& >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double& >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double& >::type lkf(lkfSEXP);
    rcpp_result_gen = Rcpp::wrap(m_e3(d, a, b, lkf));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_infHS_infHS_FB", (DL_FUNC) &_infHS_infHS_FB, 11},
    {"_infHS_infHS_VB", (DL_FUNC) &_infHS_infHS_VB, 11},
    {"_infHS_infHS_VB_probit", (DL_FUNC) &_infHS_infHS_VB_probit, 10},
    {"_infHS_rg3p", (DL_FUNC) &_infHS_rg3p, 3},
    {"_infHS_solve_quartic", (DL_FUNC) &_infHS_solve_quartic, 1},
    {"_infHS_solve_quartic2", (DL_FUNC) &_infHS_solve_quartic2, 3},
    {"_infHS_rmvnorm_b", (DL_FUNC) &_infHS_rmvnorm_b, 4},
    {"_infHS_rlambda", (DL_FUNC) &_infHS_rlambda, 3},
    {"_infHS_log_kf", (DL_FUNC) &_infHS_log_kf, 3},
    {"_infHS_m_e1", (DL_FUNC) &_infHS_m_e1, 4},
    {"_infHS_m_e2", (DL_FUNC) &_infHS_m_e2, 4},
    {"_infHS_m_e3", (DL_FUNC) &_infHS_m_e3, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_infHS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
